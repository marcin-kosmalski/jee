<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.jee</groupId>
	<artifactId>test1</artifactId>
	<version>1.0-SNAPSHOT</version>



	<packaging>war</packaging>

	<name>jeetest1</name>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.7</maven.compiler.source>
		<maven.compiler.target>1.7</maven.compiler.target>

		<!-- The standardized API -->
		<hibernate.jpa21.api.version>1.0.0.Final</hibernate.jpa21.api.version>

		<!-- Hibernate's implementation -->
		<hibernate.version>5.0.1.Final</hibernate.version>

		<!-- The standardized Bean Validation API -->
		<validation.api.version>1.1.0.Final</validation.api.version>

		<!-- Hibernate's implementation -->
		<hibernate.validator.version>5.2.1.Final</hibernate.validator.version>
		<javax-el.version>3.0.1-b04</javax-el.version>

		<!-- Everyone's favorite -->
		<slf4j.impl.version>1.6.1</slf4j.impl.version>

		<!-- For small scale deployment, use the H2 RDBMS, all Java -->
		<h2.version>1.3.171</h2.version>

		<!-- In Java SE you should use a JTA transaction manager as a JDBC connection 
			pool, Bitronix is good -->
		<btm.version>2.1.3</btm.version>

		<!-- Integration testing with TestNG is easier than JUnit -->
		<testng.version>6.8.7</testng.version>

		<!-- Java EE 7 API for the application examples -->
		<javaee-api.version>7.0</javaee-api.version>

		<!-- Application examples integration testing with Java EE environment -->
		<shrinkwrap.version>2.0.2</shrinkwrap.version>
		<arquillian.version>1.0.4.Final</arquillian.version>
		<arquillian.extension.persistence.version>1.0.0.Alpha6</arquillian.extension.persistence.version>
		<arquillian.extension.rest.version>1.0.0.Alpha3</arquillian.extension.rest.version>
		<dbunit.version>2.4.9</dbunit.version>
		<wildfly.version>8.1.0.Final</wildfly.version>

		<!-- Wildfly server deployment plugin for the application examples -->
		<wildfly.maven-plugin.version>1.0.2.Final</wildfly.maven-plugin.version>

	</properties>



	<dependencies>


		<!-- Standard Java EE APIs -->
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<version>${javaee-api.version}</version>
			<!-- We deploy to an application server that provides an implementation... -->
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jackson-provider</artifactId>
			<version>3.0.13.Final</version>
		</dependency>

		<!-- Vendor specific extensions we need to compile against -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>${hibernate.version}</version>
			<!-- Provided, at least on Wildfly! This won't run on other Java EE servers 
				which don't use Hibernate... -->
			<scope>provided</scope>
		</dependency>

		<!-- Hibernate Metamodel annotation processor will be detected by the Java 
			compiler -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-jpamodelgen</artifactId>
			<version>${hibernate.version}</version>
			<!-- Compile-time only dependency -->
			<scope>provided</scope>
		</dependency>

		<!-- Everything is tested with TestNG, avoid JUnit for integration tests! -->
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>${testng.version}</version>
			<scope>test</scope>
			<exclusions>
				<!-- Really, no -->
				<exclusion>
					<groupId>junit</groupId>
					<artifactId>junit</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Integration testing with Shrinkwrap, Arquillian, TestNG, and Wildfly, 
			nice dependencies... -->
		<dependency>
			<groupId>org.jboss.shrinkwrap.resolver</groupId>
			<artifactId>shrinkwrap-resolver-impl-maven</artifactId>
			<version>${shrinkwrap.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.arquillian.testng</groupId>
			<artifactId>arquillian-testng-container</artifactId>
			<version>${arquillian.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.arquillian.protocol</groupId>
			<artifactId>arquillian-protocol-servlet</artifactId>
			<scope>test</scope>
			<version>${arquillian.version}</version>
		</dependency>
		<!-- This means a Wildfly needs to already be running, we make a remote 
			connection! -->
		<dependency>
			<groupId>org.wildfly</groupId>
			<artifactId>wildfly-arquillian-container-remote</artifactId>
			<version>${wildfly.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- DBUnit test data imports -->
		<dependency>
			<groupId>org.jboss.arquillian.extension</groupId>
			<artifactId>arquillian-persistence-impl</artifactId>
			<version>${arquillian.extension.persistence.version}</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>log4j</groupId>
					<artifactId>log4j</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- REST client testing -->
		<dependency>
			<groupId>org.jboss.arquillian.extension</groupId>
			<artifactId>arquillian-rest-client-api</artifactId>
			<version>${arquillian.extension.rest.version}</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-simple</artifactId>
				</exclusion>
				<exclusion>
					<groupId>log4j</groupId>
					<artifactId>log4j</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.jboss.arquillian.extension</groupId>
			<artifactId>arquillian-rest-client-impl-3x</artifactId>
			<version>${arquillian.extension.rest.version}</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-simple</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>log4j</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Hit me harder, logging freaks -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-jdk14</artifactId>
			<version>${slf4j.impl.version}</version>
			<scope>test</scope>
		</dependency>

	</dependencies>



</project>